<!DOCTYPE html>
<html lang="en">
<head>
  <title><%= full_title(yield(:title)) %></title>
  <%= csrf_meta_tags %>
  <%= stylesheet_link_tag    'application', media: 'all',
                             'data-turbolinks-track': 'reload' %>
  <%= javascript_include_tag 'application', 'data-turbolinks-track': 'reload' %>
  <%= javascript_include_tag 'jw/jwplayer.js' %>
  <%= render 'layouts/shim' %>
  <%= favicon_link_tag asset_path('https://library.wustl.edu/wp-content/themes/wutheme_hoyt/images/favicon/favicon.ico'), :rel => 'icon', :type => "image/x-icon" %>
  <%= stylesheet_link_tag 'https://fonts.googleapis.com/css?family=Source+Sans+Pro' %>
  <%= stylesheet_link_tag 'navbar-fixed-top' %>
  <%= stylesheet_link_tag 'sticky-footer-navbar' %>
</head>

<body>
<%= render 'layouts/header' %>

<!-- Begin page content -->
<%= yield %>
<% if !flash.empty? %>
  <%= render 'layouts/messages' %>
<% else %>
<% end %>

<%= render 'layouts/footer' %>
<!-- Bootstrap core JavaScript
================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<!--<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>-->
<!--<script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>-->
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<!--<script src="https://blueimp.github.io/JavaScript-Load-Image/js/load-image.all.min.js"></script>-->
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<!--<script src="https://blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>-->

<script>
//     /*jslint unparam: true, regexp: true */
//     /*global window, $ */
//     $(function () {
//         'use strict';
//         // Change this to the location of your server-side upload handler:
//         var url = window.location.hostname === 'localhost:3000' ?
//             '//jquery-file-upload.appspot.com/' : '/resources',
//             uploadButton = $('<button/>')
//                 .addClass('btn btn-primary')
//                 .prop('disabled', true)
//                 .text('Processing...')
//                 .on('click', function () {
//                     var $this = $(this),
//                         data = $this.data();
//                     $this
//                         .off('click')
//                         .text('Abort')
//                         .on('click', function () {
//                             $this.remove();
//                             data.abort();
//                         });
//                     data.submit().always(function () {
//                         $this.remove();
//                     });
//                 });
//         $('#fileupload').fileupload({
//             url: url,
//             dataType: 'json',
//             paramName: 'resource[video]',
//             autoUpload: false,
//             acceptFileTypes: /(\.|\/)(mp4)$/i,
//             maxChunkSize: 100000000,
//             // maxFileSize: 1000000 * 10000,
//             // Enable image resizing, except for Android and Opera,
//             // which actually support image resizing, but fail to
//             // send Blob objects via XHR requests:
//             disableImageResize: /Android(?!.*Chrome)|Opera/
//                 .test(window.navigator.userAgent),
//             previewMaxWidth: 100,
//             previewMaxHeight: 100,
//             previewCrop: true
//         }).on('fileuploadadd', function (e, data) {
//             data.context = $('<div/>').appendTo('#files');
//             $.each(data.files, function (index, file) {
//                 var node = $('<p/>')
//                     .append($('<span/>').text(file.name));
//                 if (!index) {
//                     node
//                         .append('<br>')
//                         .append(uploadButton.clone(true).data(data));
//                 }
//                 node.appendTo(data.context);
//             });
//         }).on('fileuploadprocessalways', function (e, data) {
//             var index = data.index,
//                 file = data.files[index],
//                 node = $(data.context.children()[index]);
//             if (file.preview) {
//                 node
//                     .prepend('<br>')
//                     .prepend(file.preview);
//             }
//             if (file.error) {
//                 node
//                     .append('<br>')
//                     .append($('<span class="text-danger"/>').text(file.error));
//             }
//             if (index + 1 === data.files.length) {
//                 data.context.find('button')
//                     .text('Upload')
//                     .prop('disabled', !!data.files.error);
//             }
//         }).on('fileuploadprogressall', function (e, data) {
//             var progress = parseInt(data.loaded / data.total * 100, 10);
//             $('#progress .progress-bar').css(
//                 'width',
//                 progress + '%'
//             );
//         }).on('fileuploaddone', function (e, data) {
//             $.each(data.result.files, function (index, file) {
//                 if (file.url) {
//                     var link = $('<a>')
//                         .attr('target', '_blank')
//                         .prop('href', file.url);
//                     $(data.context.children()[index])
//                         .wrap(link);
//                 } else if (file.error) {
//                     var error = $('<span class="text-danger"/>').text(file.error);
//                     $(data.context.children()[index])
//                         .append('<br>')
//                         .append(error);
//                 }
//             });
//         }).on('fileuploadfail', function (e, data) {
//             $.each(data.files, function (index) {
//                 var error = $('<span class="text-danger"/>').text('File upload failed.');
//                 $(data.context.children()[index])
//                     .append('<br>')
//                     .append(error);
//             });
//         }).prop('disabled', !$.support.fileInput)
//             .parent().addClass($.support.fileInput ? undefined : 'disabled');
//     });
<!--</script>-->
</body>
</html>